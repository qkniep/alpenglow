name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: true

jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v5
      
      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: nextest,cargo-llvm-cov,cargo-machete

      - name: Cache rust artifacts
        uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: true

      - name: Cache build files
        uses: mozilla-actions/sccache-action@v0.0.9
      
      - name: Cache downloaded data
        id: cache-data
        uses: actions/cache@v4
        with:
          path: ./data
          key: data-v1  # Change this if the dataset version changes

      - name: Download data if needed
        run: |
          if [ ! -f data/dataset.ok ]; then
            ./download_data.sh
            touch data/dataset.ok
          fi

      - name: Build (debug)
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo build --all-targets --verbose

      - name: Build (release)
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo build --all-targets --release --verbose

      - name: Linting (clippy)
        run: cargo clippy --all-targets --all-features -- -Dwarnings

      - name: Unused dependencies
        run: cargo machete

      - name: Run tests
        run: ./test.sh ci

      # test coverage
      - name: Collect coverage data
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
        run: cargo llvm-cov --lcov --workspace --ignore-filename-regex='(benches|src/bin|src/main.rs)' --release --output-path lcov.info nextest

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  rustfmt:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Run rustfmt
        run: cargo +nightly fmt --all -- --check
